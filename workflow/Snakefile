from snakemake.utils import min_version

min_version("7.12.1")


configfile: "config/config.yaml"


EMAIL = config["email"]
RUNID = config["run_id"]
OUTPUT = config["output"]
REF_DOWNLOADS = "resources/downloaded_ref_files"
HOST = config["host_organism"]
HOST_FILE = config["host_genome"]
HOST_DOWNLOAD = f"{HOST.replace(' ', '_')}_ref_genome.fna.gz"
VIRUSES = config["viral_genomes"]
STRAIN_DB = config["strain_db"]
BARCODES = config["barcodes"]
READS = config["reads"]
SIMILARITY = config["silimarity_threshold"]
CROPLEN = config["crop_len"]
CUTOFF = config["sftclp_cutoff"]
OUTDIR = OUTPUT + RUNID
LOGDIR = f"{OUTDIR}/snakemake_logs"
BENCHDIR = f"{OUTDIR}/snakemake_benchmarks"
SAMPLES = [f for f in os.listdir(READS) if not f.startswith(".")]
ALL_INPUT = [
    f"{OUTDIR}/on_target_stats.tsv",
    expand(f"{OUTDIR}/{{sample}}_reads_per_strain_samtools.idxstats", sample=SAMPLES),
    expand(f"{OUTDIR}/{{sample}}_pre_dedup_rl.tsv", sample=SAMPLES),
    expand(f"{OUTDIR}/{{sample}}_post_dedup_rl.tsv", sample=SAMPLES),
    expand(f"{OUTDIR}/{{sample}}_reads_per_strain_filtered.tsv", sample=SAMPLES),
    expand(f"{OUTDIR}/{{sample}}_start_read_count.txt", sample=SAMPLES),
    expand(f"{OUTDIR}/{{sample}}_hard_trim_count.txt", sample=SAMPLES),
    expand(f"{OUTDIR}/{{sample}}_chimeric_count.txt", sample=SAMPLES),
    expand(f"{OUTDIR}/{{sample}}_viral_targets.log", sample=SAMPLES),
    expand(f"{OUTDIR}/{{sample}}_viral_target_genomes.fasta", sample=SAMPLES),
    expand(f"{OUTDIR}/{{sample}}_add_sample_info.done", sample=SAMPLES),
]


rule all:
    input:
        ALL_INPUT,


if STRAIN_DB == "" and not os.path.exists(f"{REF_DOWNLOADS}/strain_db.tsv"):

    include: "rules/strain_db.smk"


if STRAIN_DB == "":

    STRAIN_DB = f"{REF_DOWNLOADS}/strain_db.tsv"


if HOST_FILE == "" and not os.path.exists(f"{REF_DOWNLOADS}/{HOST_DOWNLOAD}"):

    include: "rules/get_host_ref.smk"


if HOST_FILE == "":

    HOST_FILE = f"{REF_DOWNLOADS}/{HOST_DOWNLOAD}"


include: "rules/viral_bed.smk"


include: "rules/concat_parts.smk"


include: "rules/start_read_counts.smk"


include: "rules/trim_reads.smk"


include: "rules/trim_counts.smk"


include: "rules/deduplicate.smk"


include: "rules/dup_read_lengths.smk"


include: "rules/host_removal.smk"


include: "rules/host_removal_stats.smk"


include: "rules/stats_alignment.smk"


include: "rules/on_target_stats.smk"


include: "rules/viral_alignment.smk"


include: "rules/reads_per_strain.smk"


include: "rules/find_viral_targets.smk"


include: "rules/add_sample_info.smk"


onsuccess:
    shell(f"bash workflow/scripts/log_cleanup.sh {LOGDIR}")
